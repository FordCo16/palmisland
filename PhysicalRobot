#pragma config(Hubs, S1, HTMotor, HTServo, none, none)
#pragma config(Sensor, S1, , sensorI2CMuxController)
#pragma config(Sensor, S4, touchSensor, sensorNone)
#pragma config(Motor, motorA, claw, tmotorNXT, PIDControl, encoder)
#pragma config(Motor, mtr_S1_C1_1, motorD, tmotorTetrix, openLoop)
#pragma config(Motor, mtr_S1_C1_2, motorE, tmotorTetrix, openLoop, reversed)
#pragma config(Servo, srvo_S1_C2_1, armServo1, tServoStandard)
#pragma config(Servo, srvo_S1_C2_2, armServo2, tServoStandard)
#pragma config(Servo, srvo_S1_C2_3, servo3, tServoNone)
#pragma config(Servo, srvo_S1_C2_4, servo4, tServoNone)
#pragma config(Servo, srvo_S1_C2_5, servo5, tServoNone)
#pragma config(Servo, srvo_S1_C2_6, servo6, tServoNone)

#include "JoystickDriver.c"

task main()
{
  while(true)
  {
    getJoystickSettings(joystick);
    motor[motorD] = joystick.joy1_y2;
    motor[motorE] = joystick.joy1_y1;

    /* Button 8 - Moves arm up */
    if(joy1Btn(8) == 1)
    {
      servo[armServo1] = 80;
      servo[armServo2] = 190;
      wait1Msec(1000);
    }

    /* Button 7 - Moves arm down */
    if(joy1Btn(7) == 1)
    {
      servo[armServo1] = 155;
      servo[armServo2] = 115;
      wait1Msec(1000);
    }

    /* Button 1 - Opens claw */
    if(joy1Btn(1) == 1)
    {
      while (nMotorEncoder[claw] < 50)
      {
        motor[claw] = 25;
        wait1Msec(10);
        motor[claw] = 0;
      }
    }

    /* Button 3 - Closes claw */
    if(joy1Btn(3) == 1)
    {
        motor[claw] = -50;
        wait1Msec(10);
        motor[claw] = 0;
    }
  }
}
