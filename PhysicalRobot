#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Sensor, S4,     touchSensor,    sensorNone)
#pragma config(Motor,  motorA,          claw,          tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  mtr_S1_C1_1,     motorD,        tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C1_2,     motorE,        tmotorTetrix, openLoop, reversed)
#pragma config(Servo,  srvo_S1_C2_1,    armServo1,            tServoStandard)
#pragma config(Servo,  srvo_S1_C2_2,    armServo2,            tServoStandard)
#pragma config(Servo,  srvo_S1_C2_3,    servo3,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "JoystickDriver.c"

task main()
{
 while (1 == 1)
    
    getJoystickSettings(joystick);

    motor[motorD] = joystick.joy1_y2;
    motor[motorE] = joystick.joy1_y1;

    if(joy1Btn(8) == 1)
    {
    	servo[armServo1] = 80;
    	servo[armServo2] = 190;
    	wait1Msec(1000);
    }
    
		if(joy1Btn(7) == 1)
		{
			servo[armServo1] = 160;
			servo[armServo2] = 110;
			wait1Msec(1000);
		}
		
	   if(joy1Btn(1) == 1)
			{
				motor[claw] = 25;
				wait1Msec(200);
			}
		
		if(joy1Btn(3) == 1)
	    {
				motor[claw] = -25;
				wait1Msec(200);
			}
}
